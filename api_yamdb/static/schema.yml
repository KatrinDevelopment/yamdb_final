openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/v1/auth/signup/:
    post:
      operationId: auth_signup_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUp'
          description: ''
  /api/v1/auth/token/:
    post:
      operationId: auth_token_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Token'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/categories/:
    get:
      operationId: categories_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categories_create
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/categories/{slug}/:
    delete:
      operationId: categories_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          title: Slug категории
          description: slug категории
        required: true
      tags:
      - categories
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/genres/:
    get:
      operationId: genres_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - genres
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGenreList'
          description: ''
    post:
      operationId: genres_create
      tags:
      - genres
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Genre'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Genre'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
          description: ''
  /api/v1/genres/{slug}/:
    delete:
      operationId: genres_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
          title: Slug жанра
          description: slug жанра
        required: true
      tags:
      - genres
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/titles/:
    get:
      operationId: titles_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: genre
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: year
        schema:
          type: integer
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTitleReadList'
          description: ''
    post:
      operationId: titles_create
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TitleCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TitleCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TitleCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleCreate'
          description: ''
  /api/v1/titles/{id}/:
    get:
      operationId: titles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this произведение.
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleRead'
          description: ''
    put:
      operationId: titles_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this произведение.
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TitleCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TitleCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TitleCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleCreate'
          description: ''
    patch:
      operationId: titles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this произведение.
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTitleCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTitleCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTitleCreate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TitleCreate'
          description: ''
    delete:
      operationId: titles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this произведение.
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/titles/{title_id}/reviews/:
    get:
      operationId: titles_reviews_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: titles_reviews_create
      parameters:
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/v1/titles/{title_id}/reviews/{id}/:
    get:
      operationId: titles_reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: titles_reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: titles_reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: titles_reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/titles/{title_id}/reviews/{review_id}/comments/:
    get:
      operationId: titles_reviews_comments_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: review_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: titles_reviews_comments_create
      parameters:
      - in: path
        name: review_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/v1/titles/{title_id}/reviews/{review_id}/comments/{id}/:
    get:
      operationId: titles_reviews_comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: titles_reviews_comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: titles_reviews_comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: titles_reviews_comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: review_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: title_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - titles
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{username}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_me_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Category:
      type: object
      properties:
        name:
          type: string
          title: Название категории
          description: название категории
          maxLength: 256
        slug:
          type: string
          title: Slug категории
          description: slug категории
          pattern: ^[-a-zA-Z0-9_]+$
          maxLength: 50
      required:
      - name
      - slug
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review:
          type: string
          title: Отзыв
          readOnly: true
        author:
          type: string
          readOnly: true
        text:
          type: string
          title: Текст комментария
        pub_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания комментария
      required:
      - author
      - id
      - pub_date
      - review
      - text
    Genre:
      type: object
      properties:
        name:
          type: string
          title: Название жанра
          description: название жанра
          maxLength: 256
        slug:
          type: string
          title: Slug жанра
          description: slug жанра
          pattern: ^[-a-zA-Z0-9_]+$
          maxLength: 50
      required:
      - name
      - slug
    NullEnum:
      enum:
      - null
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedGenreList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedTitleReadList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TitleRead'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        review:
          type: string
          title: Отзыв
          readOnly: true
        author:
          type: string
          readOnly: true
        text:
          type: string
          title: Текст комментария
        pub_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания комментария
    PatchedReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
          readOnly: true
        text:
          type: string
          title: Отзыв
        score:
          type: integer
          maximum: 10
          minimum: 1
          title: Оценка
        title:
          type: integer
          readOnly: true
        pub_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата публикации
    PatchedTitleCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название произведения
          maxLength: 256
        year:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Год выпуска
        genre:
          type: array
          items:
            type: string
            title: Slug жанра
            description: slug жанра
        category:
          type: string
          title: Slug категории
          description: slug категории
        description:
          type: string
          title: Краткое описание произведения
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        bio:
          type: string
          maxLength: 255
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: string
          readOnly: true
        text:
          type: string
          title: Отзыв
        score:
          type: integer
          maximum: 10
          minimum: 1
          title: Оценка
        title:
          type: integer
          readOnly: true
        pub_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата публикации
      required:
      - author
      - id
      - pub_date
      - text
      - title
    RoleEnum:
      enum:
      - user
      - moderator
      - admin
      type: string
      description: |-
        * `user` - user
        * `moderator` - moderator
        * `admin` - admin
    SignUp:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - username
    TitleCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название произведения
          maxLength: 256
        year:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Год выпуска
        genre:
          type: array
          items:
            type: string
            title: Slug жанра
            description: slug жанра
        category:
          type: string
          title: Slug категории
          description: slug категории
        description:
          type: string
          title: Краткое описание произведения
      required:
      - category
      - description
      - genre
      - id
      - name
      - year
    TitleRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название произведения
          maxLength: 256
        year:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Год выпуска
        genre:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        category:
          $ref: '#/components/schemas/Category'
        description:
          type: string
          title: Краткое описание произведения
        rating:
          type: integer
          readOnly: true
      required:
      - category
      - description
      - genre
      - id
      - name
      - rating
      - year
    Token:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        confirmation_code:
          type: string
          maxLength: 36
      required:
      - confirmation_code
      - username
    User:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        bio:
          type: string
          maxLength: 255
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - email
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
